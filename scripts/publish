#!/usr/bin/env python3

import os
import shutil
import tomllib

from pathlib import Path

PROJECT_ROOT = Path(__file__).resolve().parent.parent.absolute()
print(f"Project Root: {PROJECT_ROOT}")
BUILD_DIR = PROJECT_ROOT / "build"
print(f"Build Directory: {BUILD_DIR}")

VERSION = tomllib.loads((PROJECT_ROOT / "typst.toml").read_text())["package"]["version"]

if BUILD_DIR.exists():
    print("Cleaning up build directory...")
    BUILD_DIR.rmdir()

os.system(
    f"git clone -n --depth=1 --filter=tree:0 https://github.com/typst/packages.git {BUILD_DIR}"
)
os.chdir(BUILD_DIR)
os.system("git sparse-checkout set --no-cone /packages/preview/tapestry")
os.system("git checkout")
os.system("git remote set-url origin https://github.com/BrandenXia/typst-packages")
os.system(f"git switch -c {VERSION}")

print("Copying files...")
dst = BUILD_DIR / "packages" / "preview" / "tapestry" / VERSION
INCLUDED_FILES = [
    "template",
    "lib.typ",
    "LICENSE",
    "README.md",
    "thumbnail.png",
    "typst.toml",
]
for file in INCLUDED_FILES:
    src = PROJECT_ROOT / file
    if not src.exists():
        print(f"Warning: {src} does not exist, skipping...")
        continue
    if src.is_dir():
        shutil.copytree(src, dst / file, dirs_exist_ok=True)
    else:
        shutil.copy(src, dst / file)
os.system("git add .")
os.system(f'git commit -m "tapestry:{VERSION}"')

print("Pushing to remote...")
os.system("git push origin HEAD")

print("Done")
